<.top_navigation path={~w"contributions submission-guidelines"} />
<heading class="flex items-end">
  <h1 class="pt-3 text-4xl text-[#66626c] font-medium dark:text-white">Submission Guidelines</h1>
</heading>
<div class="max-w-[800px] text-neutral-600 pb-16 dark:text-neutral-100">
  <p class="pt-4 text-lg tracking-wide">
    So you have decided to submit an exercise to Elixirland? Great! Here are some guidelines and background information to help you get started.
  </p>
  <h2 class="text-2xl pt-6 font-semibold">What is an Elixirland exercise?</h2>
  <p class="text-[1.1rem] tracking-wide">
    An Elixirland exercise is a small programming task that is designed to help users learn some area of the Elixir ecosystem. The exercises are typically based on real-world problems and are meant to be solved using idiomatic Elixir. The exercise tasks might be small, but they are meant to be implemented with production-quality code in mind. This means that the solutions should be well-structured, tested, and documented.
  </p>
  <p class="text-[1.1rem] tracking-wide indent-8">
    Each exercise also comes with an example solution that demonstrates how the task can be solved. The example solutions serve as a reference for users who are stuck or want to compare their own solutions with a working implementation. Also, the example solutions serve as a way to showcase idiomatic Elixir code.
  </p>
  <h2 class="text-2xl pt-6 font-semibold">Exercise structure</h2>
  <p class="text-[1.1rem] tracking-wide">
    Exercises follow a specific structure to ensure consistency and make it easier for users to understand the task. Some parts of the exercise structure are mandatory, while others are optional. Here is an overview of the different sections that an exercise can contain.
  </p>
  <ol class="list-decimal list-inside text-[1.1rem]">
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Learning objectives (optional)</h3>
      <p>
        The learning objectives describe what users can expect to learn by solving the exercise. This section is optional but can be helpful for users who want to know what they will gain from solving the task.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Introduction (optional)</h3>
      <p>
        The introduction provides some background information about the task and sets the context for the exercise. This section is optional but can be useful for users who want to understand the problem domain better.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Task description</h3>
      <p>
        The task description explains what the user needs to do to solve the exercise. This section is mandatory and should be clear and concise to avoid confusion.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Requirements</h3>
      <p>
        The requirements list any constraints or conditions that the solution must satisfy. This section is mandatory and should be specific to avoid ambiguity.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Assumptions (optional)</h3>
      <p>
        The assumptions describe any assumptions that the user can make when solving the exercise. This section is optional but can be helpful for users who want to know what is expected of them.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">How to get started</h3>
      <p>
        The "How to get started" section provides guidance on how to approach the exercise and get started with the implementation. This section is mandatory and should be clear and actionable. Elixirland provides a template for this section that you can use as a starting point. You'll learn more about this template in a later section.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Example solution</h3>
      <p>
        This sections contains information about the example solution that accompanies the exercise. This is not where the example solution is provided, but rather an explanation of where to find the example solution and what it contains. This section is mandatory and should provide users with enough information to understand the purpose of the example solution. Elixirland provides a template for this section that you can use as a starting point. You’ll learn more about this template in a later section.
      </p>
    </li>
  </ol>
  <h2 class="text-2xl pt-6 font-semibold">Example solution requirements</h2>
  <p class="text-[1.1rem] tracking-wide">
    The example solution is an important part of the exercise as it serves as a reference for users who are stuck or want to compare their own solutions with a working implementation. To ensure it meets this purpose, the example solution should be well-structured, thoroughly tested, and properly documented. Below are the key requirements for the example solution.
  </p>
  <ol class="list-decimal list-inside text-[1.1rem]">
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Correctness</h3>
      <p>
        The example solution must solve the exercise task correctly, fully satisfying the requirements outlined in the exercise.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Idiomatic Elixir</h3>
      <p>
        The solution should be written in idiomatic Elixir, adhering to the conventions and best practices established by the Elixir community. Coding styles and preferences vary, of course, so this is mostly up to the exercise author.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Test coverage</h3>
      <p>
        The example solution should include tests to verify that it functions as expected. These tests should cover the main functionality as well as any potential edge cases. While it’s not necessary to achieve 100% test coverage, the goal is to demonstrate effective testing practices that align with production-quality code. While this is primarily the responsibility of the exercise author, reviewers can offer valuable feedback on the adequacy of test coverage. Requiring that the example solution is tested allows learners to learn to test their Elixir code well.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Documentation</h3>
      <p>
        The example solution should be accompanied by clear and concise documentation. This documentation should explain the purpose of the solution, how it works, and any significant design decisions. As with test coverage, the documentation should meet the standards of production-quality code. Although more documentation isn’t always better, it should be informative and help learners understand how to document their code effectively.
      </p>
    </li>
  </ol>
  <h2 class="text-2xl pt-6 font-semibold">Getting started</h2>
  <p class="text-[1.1rem] tracking-wide">
    To submit an exercise to Elixirland, you need to follow a few steps. The process is designed to be straightforward and to ensure that your exercise meets the quality standards of Elixirland. Below is an overview of the steps you need to take to submit an exercise.
  </p>
  <ol class="list-decimal list-inside">
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Request a repository for your exercise</h3>
      <p>
        To submit an exercise, you need to request a repository from the Elixirland team. This repository will be set up with the necessary structure and templates to help you get started. You can change the template to fit your exercise, but make sure to follow the exercise structure and example solution requirements outlined in this document.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Implement</h3>
      <p>
        Once you have access to the repository of your exercise, you can start implementing the exercise. Make sure to follow the exercise structure and example solution requirements outlined in this document.
      </p>
    </li>
    <li class="block">
      <h3 class="list-item text-lg font-medium pt-6">Request publication</h3>
      <p>
        When you are ready to submit your exercise, you can request publication by reaching out to the Elixirland team. They will review your exercise and provide feedback if necessary. Once your exercise is approved, your repository will be made public and the exercise will be published on the Elixirland website. Any future changes you make to the repository will automatically sync with the website.
      </p>
    </li>
  </ol>
  <p class="mb-10 mt-6">
    To request a repository for your exercise, please open an issue in the
    <.link
      class="text-blue text-blue-500 dark:text-blue-400 underline"
      href="https://github.com/elixirland/elixirland/issues"
    >
      Elixirland GitHub repository
    </.link>
    using the button below. Please include a brief statement about what area of the Elixir ecosystem your exercise wil cover.
  </p>
  <.link
    href="https://github.com/elixirland/elixirland/issues"
    class="bg-violet-900 text-white px-3.5 py-2.5 text-xl rounded hover:bg-[#65268c] font-medium shadow-lg dark:text-neutral-200"
  >
    Open an issue
  </.link>
</div>
